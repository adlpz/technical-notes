In order for cider to get the proper parameters of your boot configuration
you have to add some deps into .boot/profile.boot.

The issue is that all this profiles are then also loaded when you just do
boot repl anywhere. Here is the solution:

https://github.com/boot-clj/boot/wiki/Cider-REPL#a-better-way

Transcribed:

Put this code into ~/.boot/profile.boot:

(deftask cider "CIDER profile"
  []
  (require 'boot.repl)
  (swap! @(resolve 'boot.repl/*default-dependencies*)
         concat '[[org.clojure/tools.nrepl "0.2.12"]
                  [cider/cider-nrepl "0.10.0"]
                  [refactor-nrepl "2.0.0-SNAPSHOT"]])
  (swap! @(resolve 'boot.repl/*default-middleware*)
         concat '[cider.nrepl/cider-middleware
                  refactor-nrepl.middleware/wrap-refactor])
  identity)
In Emacs do M-x customize-variable cider-boot-parameters and set it to cider repl -s wait. For project specific settings you can create a .dir-locals.el file with the following content:

((nil . ((cider-boot-parameters . "cider repl -s ...others... wait"))))
That's all! Your regular REPL should no longer be so slow to load:

$ time boot cider repl -s
...
boot cider repl -s  32.92s user 1.20s system 210% cpu 16.182 total

$ time boot repl -s
...
boot repl -s  12.71s user 0.37s system 242% cpu 5.385 total
